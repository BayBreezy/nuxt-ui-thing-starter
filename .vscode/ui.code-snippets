{
  // Place your ui-thing workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Create props": {
    "scope": "typescript",
    "prefix": "props",
    "body": ["const ${1:props} = defineProps<{", "\t$0", "}>()"],
    "description": "Create a props block in setup block"
  },
  "Create props with defaults": {
    "scope": "typescript",
    "prefix": "props",
    "body": [
      "const ${1:propsWithDefaults} = withDefaults(defineProps<{",
      "\t$0",
      "}>(), {",
      "",
      "});"
    ]
  },
  "Create emit": {
    "scope": "typescript",
    "prefix": "emits",
    "body": ["const ${1:emits} = defineEmits<{", "\t$0", "}>();"]
  },
  "Create tailwind-variant styles": {
    "scope": "typescript",
    "prefix": "styles",
    "body": ["const styles = tv({", "\tbase: \"$0\"", "})"]
  }
}
